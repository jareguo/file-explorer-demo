var events = require("events");
var path = require('path');
var util = require("util");
var jade = require('jade');

if (process.platform == 'win32') {
    var win32 = require("win32");
}

// Template engine
var gen_bar = jade.compile([
    '- each item, i in sequence',
    '  - if (i != sequence.length - 1)',
    '    li(data-path="#{item.path}")',
    '      a(href="#") #{item.name}',
    '      span.divider ' + path.sep,
    '  - else',
    '    li.active #{item.name}',
].join('\n'));

// Our real type
function AddressBar(element) {
    events.EventEmitter.call(this);
    this.element = element;

    // Monitor click on AddressBar
    var self = this;
    element.delegate('a', 'click', function () {
        //self.element.children('.active').removeClass('active');
        //$(this).parent().addClass('active');

        var dir = $(this).parent().attr('data-path');
        if (process.platform == 'win32' && dir == win32.MY_COMPUTER_PATH) {
            self.emit('select drive');
        }
        else {
            self.emit('navigate', dir);
        }

        return false;
    });
}

util.inherits(AddressBar, events.EventEmitter);

AddressBar.prototype.set = function (dirPath) {
    console.assert(!dirPath || dirPath.slice(-1) == path.sep, "如果不以/结尾，'D:'会被path.normalize转成'D:.' ");

    this.currentPath = path.normalize(dirPath);

    var result = [];
    if (process.platform == 'win32') {
        // add my computer for windows
        result.push({
            name: win32.MY_COMPUTER_NAME,
            path: win32.MY_COMPUTER_PATH,
        });
    }
    
    // Split path into separate elements
    var sequence = this.currentPath.split(path.sep);
    for (var i = 0; i < sequence.length; ++i) {
        if (sequence[i]) {
            result.push({
                name: sequence[i],
                path: sequence.slice(0, 1 + i).join(path.sep),
            });
        }
    }

    if (process.platform != 'win32') {
        if (sequence[0] == '') {
            // Add root for *nix
            result[0] = {
                name: 'root',
                path: '/',
            };
        }
    }
    else {
        if (result) {
            // convert drive name to upper case for windows
            result[1].name = result[1].name.toUpperCase();
        }
    }
    this.element.html(gen_bar({sequence: result}));
}

AddressBar.prototype.selectDrive = function () {
    // 只需把路径缩短到只剩下我的电脑
    this.element.html(gen_bar({
        sequence: [{
            name: win32.MY_COMPUTER_NAME,
        }]
    }));
}

exports.AddressBar = AddressBar;
